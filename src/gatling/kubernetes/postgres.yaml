apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: init-scripts
data:
  init.sql: |
    CREATE DATABASE quarkusdb;
    CREATE DATABASE keycloakdb;
    
    CREATE USER quarkus WITH ENCRYPTED PASSWORD 'quarkus';
    GRANT ALL PRIVILEGES ON DATABASE quarkusdb TO quarkus;
    
    CREATE USER keycloak WITH ENCRYPTED PASSWORD 'keycloak';
    GRANT ALL PRIVILEGES ON DATABASE keycloakdb TO keycloak;
    
    \c keycloakdb
    
    GRANT USAGE ON SCHEMA public TO keycloak;
    GRANT CREATE ON SCHEMA public TO keycloak;
    GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO keycloak;
    GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO keycloak;
    GRANT ALL PRIVILEGES ON ALL FUNCTIONS IN SCHEMA public TO keycloak;
    
    \c quarkusdb
    
    GRANT USAGE ON SCHEMA public TO quarkus;
    GRANT CREATE ON SCHEMA public TO quarkus;
    GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO quarkus;
    GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO quarkus;
    GRANT ALL PRIVILEGES ON ALL FUNCTIONS IN SCHEMA public TO quarkus;


---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:16-alpine
          args: ["-c", "max_connections=400"]
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: "admin"
            - name: POSTGRES_PASSWORD
              value: "admin"
            - name: POSTGRES_DB
              value: "postgres"
          resources:
            requests:
              memory: "4Gi"
              cpu: "1"
            limits:
              memory: "8Gi"
              cpu: "8"
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
            - name: init-scripts
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-data
        - name: init-scripts
          configMap:
            name: init-scripts

---

apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  ports:
    - port: 5432
  selector:
    app: postgres

---