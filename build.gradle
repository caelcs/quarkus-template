plugins {
    id("java")
    id("io.quarkus")
    id("com.github.spotbugs") version "6.1.7"
    id("com.tngtech.jgiven.gradle-plugin") version "2.0.2"
    id("com.github.ben-manes.versions") version "0.52.0"
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation('io.quarkus:quarkus-micrometer-registry-prometheus')
    implementation('io.quarkus:quarkus-jsonb')
    implementation('com.fasterxml.jackson.datatype:jackson-datatype-jsr310')
    implementation('io.quarkus:quarkus-rest-client-jackson')
    implementation('io.quarkus:quarkus-hibernate-validator')
    implementation('io.quarkus:quarkus-smallrye-openapi')
    implementation('io.quarkus:quarkus-liquibase')
    implementation('io.quarkus:quarkus-config-yaml')
    implementation('io.quarkus:quarkus-jdbc-postgresql')
    implementation('io.quarkus:quarkus-hibernate-orm')
    implementation('io.quarkus:quarkus-rest-jackson')
    implementation('io.quarkus:quarkus-logging-json')
    implementation('io.quarkus:quarkus-hibernate-orm-panache')
    implementation('io.quarkus:quarkus-smallrye-health')
    implementation(enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}"))
    implementation('io.quarkus:quarkus-rest')
    implementation('io.quarkus:quarkus-arc')

    implementation('io.quarkus:quarkus-jdbc-h2')
    testImplementation('io.quarkus:quarkus-junit5')
    testImplementation('io.rest-assured:rest-assured')
    testImplementation("org.mockito:mockito-junit-jupiter:${mockitoVersion}")

    testImplementation("com.tngtech.archunit:archunit:${archunitVersion}")

    compileOnly("org.projectlombok:lombok:${lombokVersion}")
    annotationProcessor("org.projectlombok:lombok:${lombokVersion}")
    testCompileOnly("org.projectlombok:lombok:${lombokVersion}")
    testAnnotationProcessor("org.projectlombok:lombok:${lombokVersion}")

    implementation("org.mapstruct:mapstruct:${mapStructVersion}")
    annotationProcessor("org.mapstruct:mapstruct-processor:${mapStructVersion}")
    testImplementation("org.mapstruct:mapstruct:${mapStructVersion}")
    testAnnotationProcessor("org.mapstruct:mapstruct-processor:${mapStructVersion}")

    testImplementation("io.quarkiverse.wiremock:quarkus-wiremock:${quarkusWiremockVersion}")
    testImplementation("io.quarkiverse.wiremock:quarkus-wiremock-test:${quarkusWiremockVersion}")

    compileOnly("com.github.spotbugs:spotbugs-annotations:${spotBugsVersion}")
    testCompileOnly("com.github.spotbugs:spotbugs-annotations:${spotBugsVersion}")

    // JGiven for JUnit 5
    nativeTestImplementation("com.tngtech.jgiven:jgiven-junit5:${jGivenVersion}")
    nativeTestImplementation("com.tngtech.jgiven:jgiven-html5-report:${jGivenVersion}")


    // Quarkus Testing
    nativeTestImplementation 'io.quarkus:quarkus-junit5'
    nativeTestImplementation 'io.rest-assured:rest-assured'
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

test {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
    testLogging {
        events "passed", "skipped", "failed"
    }
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

